1. benchmark current implementation
2. allow for callback notifications
3. allow for filtering valid structs
4. allow for reduction/mutation of elements when creating struct members
5. allow for specifying array bounds when getting published structs
6. Allow for struct publish callbacks
7. answer inlining questions by disassembling compiled code and optimize further
8. investigate further memory footprint reductions
9. sleep

References:
1. http://expat.sourceforge.net/
2. Nearly all the linear event pased parsers I have ever written
3. https://github.com/josephcopenhaver/VNCServer/blob/master/src/com/jcope/vnc/server/ClientHandler.java
4. https://blog.cloudflare.com/recycling-memory-buffers-in-go/
5. http://www.gnu.org/software/gperf/manual/gperf.html